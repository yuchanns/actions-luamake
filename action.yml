name: 'Setup luamake'
description: 'Build and setup luamake for different operating systems'
author: 'yuchanns'

inputs:
  luamake-version:
    description: 'luamake release tag version'
    required: false
    default: 'latest'

outputs:
  luamake-path:
    description: 'Path to the luamake executable'
    value: ${{ steps.setup.outputs.luamake-path }}

runs:
  using: 'composite'
  steps:
    - name: Get luamake download URL
      id: get-url
      uses: actions/github-script@v7
      with:
        script: |
          let release;
          if ('${{ inputs.luamake-version }}' === 'latest') {
            release = await github.rest.repos.getLatestRelease({
              owner: 'actboy168',
              repo: 'luamake'
            });
          } else {
            release = await github.rest.repos.getReleaseByTag({
              owner: 'actboy168',
              repo: 'luamake',
              tag: '${{ inputs.luamake-version }}'
            });
          }
          
          const downloadUrl = release.data.zipball_url;
          core.setOutput('download-url', downloadUrl);
          console.log('Download URL:', downloadUrl);

    - name: Download and extract luamake source
      shell: bash
      run: |
        TEMP_DIR="${{ runner.temp }}/luamake"
        mkdir -p "$TEMP_DIR"
        cd "$TEMP_DIR"
        
        curl -L "${{ steps.get-url.outputs.download-url }}" -o luamake-source.zip
        
        unzip luamake-source.zip
        
        extracted_dir=$(find . -maxdepth 1 -type d -name "actboy168-luamake-*" | head -n 1)
        if [ -n "$extracted_dir" ]; then
          mv "$extracted_dir"/* .
          mv "$extracted_dir"/.* . 2>/dev/null || true
          rmdir "$extracted_dir"
        fi
        
        rm luamake-source.zip
        
        echo "LUAMAKE_TEMP_DIR=$TEMP_DIR" >> $GITHUB_ENV
        ls -la

    - name: Setup dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt update
        sudo apt install gcc g++ ninja-build binutils-dev libunwind-dev -y

    - name: Setup dependencies (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install ninja

    - name: Setup MSVC (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build luamake
      shell: bash
      working-directory: ${{ env.LUAMAKE_TEMP_DIR }}
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          chmod +x compile/install.bat 2>/dev/null || true
          compile/install.bat
        else
          chmod +x compile/install.sh
          compile/install.sh
        fi

    - name: Install luamake to system and cleanup
      id: setup
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          TARGET_DIR="C:/Windows/System32"
          LUAMAKE_BINARY="luamake.exe"
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          TARGET_DIR="/usr/local/bin"
          LUAMAKE_BINARY="luamake"
        else  # Linux
          TARGET_DIR="/usr/local/bin"
          LUAMAKE_BINARY="luamake"
        fi
        
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "Using Windows system directory: $TARGET_DIR"
        else
          sudo mkdir -p "$TARGET_DIR" 2>/dev/null || mkdir -p "$TARGET_DIR"
        fi
        
        if [ -f "${{ env.LUAMAKE_TEMP_DIR }}/$LUAMAKE_BINARY" ]; then
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp "${{ env.LUAMAKE_TEMP_DIR }}/$LUAMAKE_BINARY" "$TARGET_DIR/"
          else
            sudo cp "${{ env.LUAMAKE_TEMP_DIR }}/$LUAMAKE_BINARY" "$TARGET_DIR/" 2>/dev/null || cp "${{ env.LUAMAKE_TEMP_DIR }}/$LUAMAKE_BINARY" "$TARGET_DIR/"
            sudo chmod +x "$TARGET_DIR/$LUAMAKE_BINARY" 2>/dev/null || chmod +x "$TARGET_DIR/$LUAMAKE_BINARY"
          fi
          echo "luamake-path=$TARGET_DIR" >> $GITHUB_OUTPUT
          echo "✅ luamake installed to $TARGET_DIR"
        else
          echo "❌ luamake binary not found at ${{ env.LUAMAKE_TEMP_DIR }}/$LUAMAKE_BINARY"
          ls -la "${{ env.LUAMAKE_TEMP_DIR }}/"
          exit 1
        fi
        
        rm -rf "${{ env.LUAMAKE_TEMP_DIR }}"
        echo "🧹 Cleaned up temporary directory"
        
        which luamake || echo "Checking luamake installation..."
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          where luamake || echo "luamake.exe installed to $TARGET_DIR"
        fi
        luamake help 2>/dev/null || echo "luamake installed successfully"
